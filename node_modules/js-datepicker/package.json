{
  "_args": [
    [
      {
        "raw": "js-datepicker@^2.0.6",
        "scope": null,
        "escapedName": "js-datepicker",
        "name": "js-datepicker",
        "rawSpec": "^2.0.6",
        "spec": ">=2.0.6 <3.0.0",
        "type": "range"
      },
      "/Users/jenisewalters/gift-blissfully"
    ]
  ],
  "_from": "js-datepicker@>=2.0.6 <3.0.0",
  "_id": "js-datepicker@2.0.6",
  "_inCache": true,
  "_location": "/js-datepicker",
  "_nodeVersion": "8.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/js-datepicker-2.0.6.tgz_1498223710963_0.42139663407579064"
  },
  "_npmUser": {
    "name": "qodesmith",
    "email": "theqodesmith@gmail.com"
  },
  "_npmVersion": "5.0.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "js-datepicker@^2.0.6",
    "scope": null,
    "escapedName": "js-datepicker",
    "name": "js-datepicker",
    "rawSpec": "^2.0.6",
    "spec": ">=2.0.6 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/js-datepicker/-/js-datepicker-2.0.6.tgz",
  "_shasum": "6733fad8635d7a5bb3d2a2b45fe3b0a5e85b60a8",
  "_shrinkwrap": null,
  "_spec": "js-datepicker@^2.0.6",
  "_where": "/Users/jenisewalters/gift-blissfully",
  "author": {
    "name": "Qodesmith"
  },
  "bugs": {
    "url": "https://github.com/qodesmith/datepicker/issues"
  },
  "dependencies": {},
  "description": "Get a date with JavaScript! A datepicker with no dependencies.",
  "devDependencies": {
    "babel-preset-latest": "^6.22.0",
    "gulp": "github:gulpjs/gulp#4.0",
    "gulp-autoprefixer": "^3.1.1",
    "gulp-babel": "^6.1.2",
    "gulp-concat-util": "^0.5.5",
    "gulp-less": "^3.3.0",
    "uglify-js": "^2.7.5"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-94820XQzkdDRkxFvNPHaM11B5PYqjg5PNhXrJTmTBPlO2IWlllOoaddR4lvpW4o+I6CfJ4E91gn0IataXvsJAg==",
    "shasum": "6733fad8635d7a5bb3d2a2b45fe3b0a5e85b60a8",
    "tarball": "https://registry.npmjs.org/js-datepicker/-/js-datepicker-2.0.6.tgz"
  },
  "email": "theqodesmith@gmail.com",
  "gitHead": "4564b50207b9fbac913692393a07aae95c443c7a",
  "homepage": "https://github.com/qodesmith/datepicker#readme",
  "keywords": [
    "datepicker",
    "date picker",
    "date",
    "picker",
    "calendar",
    "javascript",
    "vanilla"
  ],
  "license": "ISC",
  "main": "datepicker.js",
  "maintainers": [
    {
      "name": "qodesmith",
      "email": "theqodesmith@gmail.com"
    }
  ],
  "name": "js-datepicker",
  "optionalDependencies": {},
  "readme": "# Datepicker.js\nGet a date with JavaScript! Datepicker has **no dependencies** and is _stupid lightweight_ weighing in at **3.3kb gzipped**! I mean, do you even bandwidth bro? Datepicker is simple to use and looks sexy on the screen. A calendar pops up and you pick a date. #Boom.\n\n![Datepicker screenshot](https://raw.githubusercontent.com/qodesmith/datepicker/master/calendar.png \"Get a date with JavaScript!\")\n\n<!-- [Live Demo](http://aaroncordova.xyz/datepicker) -->\n\n## Installation\n\n#### Manually\n\nSimply include `datepicker.css` in the `<head>`...\n```html\n<head>\n  ...\n  <link rel=\"stylesheet\" href=\"datepicker.css\">\n  <!-- Via Unpkg CDN -->\n  <!-- <link rel=\"stylesheet\" href=\"https://unpkg.com/js-datepicker/datepicker.css\"> -->\n</head>\n```\n\nand include `datepicker.js` just above your closing `</body>` tag...\n```html\n<body>\n  ...\n  <script src=\"datepicker.js\"></script>\n  <!-- Via Unpkg CDN -->\n  <!-- <script src=\"https://unpkg.com/js-datepicker\"></script> -->\n</body>\n```\n\n#### Via NPM\n```\nnpm install --save js-datepicker\n```\n\nFiles & locations:\n\n|       File       |            Location             |             Description             |\n| ---------------- | ------------------------------- | ----------------------------------- |\n| datepicker.js    | node_modules/js-datepicker/     | our main file                       |\n| dateicker.min.js | node_modules/js-datepicker/     | minified main file (3.3kb gzipped!) |\n| datepicker.css   | node_modules/js-datepicker/     | stylesheet                          |\n| datepicker.less  | node_modules/js-datepicker/less | less: use it for your own builds    |\n\n\n## Usage\n\n```javascript\nconst picker = datepicker(selector, options);\n```\n\nDatepicker takes 2 arguments:\n\n1. `selector` - two possibilities:\n    1. `string` - a CSS selector, such as `'.my-class'`, `'#my-id'`, or `'div'`.\n    2. `DOM node` - provide a DOM node, such as `document.querySelector('#my-id')`.\n2. (optional) An object full of options (see below)\n\nYou can use Datepicker with any type of element you want. If used with an `<input>` element (the common use case), then the `<input>`'s value will automatically be set when selecting a date.\n\nNOTE: Using `<input type=\"date\">` will cause issues as those inputs already have a built in calendar. `datepicker` will not change the value of those inputs. Use `<input type=\"text\">` instead.\n\nSimplest example:\n```javascript\nconst picker = datepicker('.some-element');\n```\n\n### Manual Year Navigation\n\nBy clicking on the year or month, an overlay will show revealing an input field where you can enter a year:\n![Datepicker screenshot](https://raw.githubusercontent.com/qodesmith/datepicker/master/overlay.png \"Get a date with JavaScript!\")\n\n\n## Options\n\n| Option | Description |\n| -------| ----------- |\n| `position` | (string) Can be 1 of 4 values: `'tr'`, `'tl'`, `'br'`, `'bl'` representing top-right, top-left, bottom-right, and bottom-left respectively. Datepicker will position itself accordingly relative to the element you reference in the 1st argument. |\n| `startDate` | (JS date object) The month that the calendar will open up to. The default value is the current month. Example: `new Date()` |\n| `dateSelected` | (JS date object) - This will start the calendar with a date already selected. If Datepicker is used with an `<input>` element, that field will be populated with this date as well. Example: `new Date(2017, 0, 15)` |\n| `minDate` | (JS date object) - This will be the minumum threshold of selectable dates. Anything prior will be unselectable. Example: `new Date(2016, 5, 1)` |\n| `maxDate` | (JS date object) - This will be the maximum threshold of selectable dates. Anything after it will be unselectable. Example: `new Date(2017, 11, 31)` |\n| `noWeekends` | (boolean) - Provide `true` to disable selecting weekends. |\n| `formatter` | (function) - Provide a function that manually sets the provided input's value with your own formatting. This function is passed two arguments. 1st argument is the element `datepicker` is triggered on. 2nd argument is a JavaScript date object for the selected date. |\n| `onSelect` | (function) - Callback function after a date has been selected. |\n| `onShow` | (function) - Callback function when the calendar is shown. |\n| `onHide` | (function) - Callback function when the calendar is hidden. |\n| `onMonthchange` | (function) - Callback function when the month has changed. |\n| `customMonths` | (array) - Custom labels for months. Provide an array of 12 strings. |\n| `customdays` | (array) - Custom labels for days. Provide an array of 7 strings. |\n| `disableMobile` | (boolean) - Optionally disable Datepicker on mobile devices. This is handy if you'd like to trigger the mobile device's native date picker instead. |\n\n_NOTE: All callback functions are both bound to the Datepicker instance and passed the instance as its 1st argument. So you can simply access the instance via the_ `this` _keyword or the 1st argument._\n\n\n## Methods\n\n| Method | Description |\n| ------ | ----------- |\n| `.setDate` | Allows you to programmatically select a date on the calendar. It takes a JavaScript date object as it's only argument. E.x.: `picker.setDate(new Date(2099, 0, 5))` |\n| `.remove` | Performs cleanup. Will remove various event listeners and mutation observers _only_ for the instance it's called on. So if there are multiple Datepickers on the page, the others will be unaffected.\n\n\n## Properties & Values\n\nIf you take a look at the datepicker instance, you'll notice plenty of values that you can grab and use however you'd like. Let's say you instantiated datepicker as such:\n\n```javascript\nconst picker = datepicker('.some-class', {dateSelected: new Date(2099, 0, 5)});\n```\n\nBelow will detail some helpful properties and values that are available on the `picker` example above.\n\n| Property | Value |\n| -------- | ----- |\n| `calendar` | The calendar element. |\n| `currentMonth` | A 0-index number representing the current month. For example, `0` represents January. |\n| `currentMonthName` | Calendar month in plain english. E.x. `January` |\n| `currentYear` | The current year. E.x. `2099` |\n| `dateSelected` | The value of the selected date. This will be `undefined` if no date has been selected yet. |\n| `el` | The element datepicker is relatively positioned against. |\n\n\n## Sizing The Calendar\n\nStyles for the calendar are compiled down to CSS from the `datepicker.less` file with `gulp`. All the sizes for the various portions of the calendar are relative to a single value at the top of that file: `@width: 250px;`. To resize the calendar, simply rebuild `datepicker.css` by doing the following:\n\n1. Open `datepicker.less`\n2. Change the `@width` variable to whatever value you want (try `350px`) and save.\n3. From the command line run `gulp less`.\n\n\n## Examples\n\nSimplest usage:\n```javascript\nconst picker = datepicker('#some-id');\n```\n\nWith all options declared:\n```javascript\nconst picker = datepicker(document.querySelector('#some-id'), {\n  position: 'tr', // Top right.\n  startDate: new Date(), // This month.\n  dateSelected: new Date(), // Today is selected.\n  minDate: new Date(2016, 5, 1), // June 1st, 2016.\n  maxDate: new Date(2099, 0, 1), // Jan 1st, 2099.\n  noWeekends: true, // Weekends will be unselectable.\n  formatter: function(el, date) {\n    // This will display the date as `1/1/2017`.\n    el.value = date.toDateString();\n  },\n  onSelect: function(instance) {\n    // Show which date was selected.\n    console.log(instance.dateSelected);\n  },\n  onShow: function(instance) {\n    console.log('Calendar showing.');\n  },\n  onHide: function(instance) {\n    console.log('Calendar hidden.');\n  },\n  onMonthChange: function(instance) {\n    // Show the month of the selected date.\n    console.log(instance.currentMonthName);\n  },\n  customMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  customDays: ['S', 'M', 'T', 'W', 'Th', 'F', 'S'],\n  disableMobile: true // Conditionally disabled on mobile devices.\n});\n```",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/qodesmith/datepicker.git"
  },
  "scripts": {
    "start": "node sandboxServer.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "2.0.6"
}
